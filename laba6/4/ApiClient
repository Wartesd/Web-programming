<?php
class ApiClient 
{
    private string $baseUrl;
    private ?string $authToken;
    private array $defaultHeaders;
    
    public function __construct(string $baseUrl, ?string $authToken = null) 
    {
        $this->baseUrl = rtrim($baseUrl, '/');
        $this->authToken = $authToken;
        $this->defaultHeaders = [
            'Content-Type: application/json',
            'Accept: application/json'
        ];
    }

    /**
     * Добавляет кастомные заголовки для всех запросов
     */
    public function addHeader(string $header): void
    {
        $this->defaultHeaders[] = $header;
    }

    /**
     * Выполняет HTTP-запрос
     */
    private function request(
        string $method, 
        string $endpoint = '', 
        ?array $payload = null
    ): array {
        $url = $this->baseUrl . '/' . ltrim($endpoint, '/');
        $headers = $this->defaultHeaders;
        
        if ($this->authToken) {
            $headers[] = "Authorization: Bearer {$this->authToken}";
        }

        $ch = curl_init($url);
        $options = [
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_HTTPHEADER => $headers,
            CURLOPT_CUSTOMREQUEST => strtoupper($method),
        ];

        if (in_array($method, ['POST', 'PUT', 'PATCH']) {
            $options[CURLOPT_POSTFIELDS] = json_encode($payload);
        }

        curl_setopt_array($ch, $options);

        $response = curl_exec($ch);
        $statusCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        $error = curl_error($ch);
        curl_close($ch);

        if ($error) {
            throw new RuntimeException("CURL error: {$error}");
        }

        $decodedResponse = json_decode($response, true) ?? $response;

        if ($statusCode >= 400) {
            throw new RuntimeException(
                "API error {$statusCode}: " . print_r($decodedResponse, true)
            );
        }

        return [
            'status' => $statusCode,
            'data' => $decodedResponse
        ];
    }

    public function get(string $endpoint = ''): array 
    {
        return $this->request('GET', $endpoint);
    }

    public function post(string $endpoint = '', array $data): array 
    {
        return $this->request('POST', $endpoint, $data);
    }

    public function put(string $endpoint = '', array $data): array 
    {
        return $this->request('PUT', $endpoint, $data);
    }

    public function delete(string $endpoint = ''): array 
    {
        return $this->request('DELETE', $endpoint);
    }
}

// Пример использования
try {
    $client = new ApiClient('https://jsonplaceholder.typicode.com/posts', 'your_token_here');
    
    // Можно добавить кастомные заголовки
    $client->addHeader('X-Custom-Header: Value');
    
    // GET запрос
    $response = $client->get('/1');
    print_r($response['data']);
    
    // POST запрос
    $newPost = $client->post('', [
        'title' => 'New Post',
        'body' => 'Content here',
        'userId' => 1
    ]);
    print_r($newPost['data']);
    
} catch (RuntimeException $e) {
    echo "Error: " . $e->getMessage();
}
